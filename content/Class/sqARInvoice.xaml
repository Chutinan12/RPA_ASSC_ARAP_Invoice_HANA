<Activity mc:Ignorable="sap sap2010" x:Class="sqARInvoice" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ucas="clr-namespace:UiPath.Core.Activities.SAP;assembly=UiPath.UiAutomation.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_IsSuccess" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_StrMessage" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1234,6326.666666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="72">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>RPAOACLibraryForWindows</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.SAP</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Activities.System.Utilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="92">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>RPAOACLibraryForWindows</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>RPA_SCM_ARAP_Invoice.Core</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="main genarate file" sap:VirtualizedContainerService.HintSize="1053.3333333333333,6262" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtMasterPostingKey">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">new DataTable()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="dtMasterRef">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">new DataTable()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="dtDataUpload">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">new DataTable()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="dtData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="991.3333333333334,6151.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="AR process" sap:VirtualizedContainerService.HintSize="952.6666666666666,5911.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="get data Master &amp; Data" sap:VirtualizedContainerService.HintSize="890.6666666666666,3761.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="755.3333333333334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_2">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">"Debug"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="755.3333333333334,92" sap2010:WorkflowViewState.IdRef="WriteLine_4">
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">"path master AR "+in_Config["PathMasterAR"].ToString()</CSharpValue>
              </InArgument>
            </WriteLine>
            <ui:ForEachFolderX DisplayName="read master all company" sap:VirtualizedContainerService.HintSize="755.3333333333334,2414" sap2010:WorkflowViewState.IdRef="ForEachFolderX_1" IncludeSubFolders="False" OrderBy="NameAscFirst" SkipFoldersWithoutPermission="True">
              <ui:ForEachFolderX.Body>
                <ActivityAction x:TypeArguments="si:DirectoryInfo, x:Int32">
                  <ActivityAction.Argument1>
                    <DelegateInArgument x:TypeArguments="si:DirectoryInfo" Name="CurrentFolder" />
                  </ActivityAction.Argument1>
                  <ActivityAction.Argument2>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                  </ActivityAction.Argument2>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="721.3333333333334,2144" sap2010:WorkflowViewState.IdRef="Sequence_31">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If sap:VirtualizedContainerService.HintSize="659.3333333333334,2033.3333333333333" sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">CurrentFolder.ToString().ToLower().Contains("masterar")</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="625.6,1849.6" sap2010:WorkflowViewState.IdRef="Sequence_29">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ForEachFileX DisplayName="For Each File in Folder" sap:VirtualizedContainerService.HintSize="582.4,1760" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="True">
                            <ui:ForEachFileX.Body>
                              <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                                <ActivityAction.Argument1>
                                  <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                                </ActivityAction.Argument1>
                                <ActivityAction.Argument2>
                                  <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                </ActivityAction.Argument2>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="548.8,1495.2" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="dtTemp" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="486.4,1383.2" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="449.6,1152" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ExcelProcessScopeX FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayAlerts="False" DisplayName="Excel Process Scope" ExistingProcessAction="ForceKill" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_5" ShowExcelWindow="False">
                                          <ueab:ExcelProcessScopeX.Body>
                                            <ActivityAction x:TypeArguments="ui:IExcelProcess">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                                              </ActivityAction.Argument>
                                              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="539.2,551.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_6" ReadOnly="True" ResizeWindow="None">
                                                <ueab:ExcelApplicationCard.Body>
                                                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="505.6,281.6" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="443.2,169.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_7" VisibleOnly="False">
                                                        <ueab:ReadRangeX.Range>
                                                          <InArgument x:TypeArguments="ue:IReadRangeRef">
                                                            <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">Excel.Sheet["MasterPostingKey"]</CSharpValue>
                                                          </InArgument>
                                                        </ueab:ReadRangeX.Range>
                                                        <ueab:ReadRangeX.SaveTo>
                                                          <OutArgument x:TypeArguments="sd:DataTable">
                                                            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">dtTemp</CSharpReference>
                                                          </OutArgument>
                                                        </ueab:ReadRangeX.SaveTo>
                                                      </ueab:ReadRangeX>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ueab:ExcelApplicationCard.Body>
                                                <ueab:ExcelApplicationCard.WorkbookPath>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">CurrentFile.ToString()</CSharpValue>
                                                  </InArgument>
                                                </ueab:ExcelApplicationCard.WorkbookPath>
                                              </ueab:ExcelApplicationCard>
                                            </ActivityAction>
                                          </ueab:ExcelProcessScopeX.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:ExcelProcessScopeX>
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,200" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,88" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="MasterPostingKey">
                                                <ui:ReadRange.DataTable>
                                                  <OutArgument x:TypeArguments="sd:DataTable">
                                                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">dtTemp</CSharpReference>
                                                  </OutArgument>
                                                </ui:ReadRange.DataTable>
                                                <ui:ReadRange.WorkbookPath>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">CurrentFile.ToString()</CSharpValue>
                                                  </InArgument>
                                                </ui:ReadRange.WorkbookPath>
                                              </ui:ReadRange>
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:CommentOut>
                                        <ui:MergeDataTable DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="387.2,134.4" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add">
                                          <ui:MergeDataTable.Destination>
                                            <InOutArgument x:TypeArguments="sd:DataTable">
                                              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">dtMasterPostingKey</CSharpReference>
                                            </InOutArgument>
                                          </ui:MergeDataTable.Destination>
                                          <ui:MergeDataTable.Source>
                                            <InArgument x:TypeArguments="sd:DataTable">
                                              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">dtTemp</CSharpValue>
                                            </InArgument>
                                          </ui:MergeDataTable.Source>
                                        </ui:MergeDataTable>
                                        <ueab:ExcelProcessScopeX FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayAlerts="False" DisplayName="Excel Process Scope" ExistingProcessAction="ForceKill" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_6" ShowExcelWindow="False">
                                          <ueab:ExcelProcessScopeX.Body>
                                            <ActivityAction x:TypeArguments="ui:IExcelProcess">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                                              </ActivityAction.Argument>
                                              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="539.2,551.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_7" ReadOnly="True" ResizeWindow="None">
                                                <ueab:ExcelApplicationCard.Body>
                                                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="505.6,281.6" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="443.2,169.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_8" VisibleOnly="False">
                                                        <ueab:ReadRangeX.Range>
                                                          <InArgument x:TypeArguments="ue:IReadRangeRef">
                                                            <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">Excel.Sheet["MasterReference"]</CSharpValue>
                                                          </InArgument>
                                                        </ueab:ReadRangeX.Range>
                                                        <ueab:ReadRangeX.SaveTo>
                                                          <OutArgument x:TypeArguments="sd:DataTable">
                                                            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">dtTemp</CSharpReference>
                                                          </OutArgument>
                                                        </ueab:ReadRangeX.SaveTo>
                                                      </ueab:ReadRangeX>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ueab:ExcelApplicationCard.Body>
                                                <ueab:ExcelApplicationCard.WorkbookPath>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">CurrentFile.ToString()</CSharpValue>
                                                  </InArgument>
                                                </ueab:ExcelApplicationCard.WorkbookPath>
                                              </ueab:ExcelApplicationCard>
                                            </ActivityAction>
                                          </ueab:ExcelProcessScopeX.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:ExcelProcessScopeX>
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,200" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="MasterReference">
                                                <ui:ReadRange.DataTable>
                                                  <OutArgument x:TypeArguments="sd:DataTable">
                                                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">dtTemp</CSharpReference>
                                                  </OutArgument>
                                                </ui:ReadRange.DataTable>
                                                <ui:ReadRange.WorkbookPath>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">CurrentFile.ToString()</CSharpValue>
                                                  </InArgument>
                                                </ui:ReadRange.WorkbookPath>
                                              </ui:ReadRange>
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:CommentOut>
                                        <ui:MergeDataTable DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="387.2,134.4" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Add">
                                          <ui:MergeDataTable.Destination>
                                            <InOutArgument x:TypeArguments="sd:DataTable">
                                              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">dtMasterRef</CSharpReference>
                                            </InOutArgument>
                                          </ui:MergeDataTable.Destination>
                                          <ui:MergeDataTable.Source>
                                            <InArgument x:TypeArguments="sd:DataTable">
                                              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">dtTemp</CSharpValue>
                                            </InArgument>
                                          </ui:MergeDataTable.Source>
                                        </ui:MergeDataTable>
                                        <ueab:ExcelProcessScopeX FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayAlerts="False" DisplayName="Excel Process Scope" ExistingProcessAction="ForceKill" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_7" ShowExcelWindow="False">
                                          <ueab:ExcelProcessScopeX.Body>
                                            <ActivityAction x:TypeArguments="ui:IExcelProcess">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                                              </ActivityAction.Argument>
                                              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="539.2,551.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_8" ReadOnly="True" ResizeWindow="None">
                                                <ueab:ExcelApplicationCard.Body>
                                                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="505.6,281.6" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="443.2,169.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_9" VisibleOnly="False">
                                                        <ueab:ReadRangeX.Range>
                                                          <InArgument x:TypeArguments="ue:IReadRangeRef">
                                                            <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">Excel.Sheet["MasterTemplate"]</CSharpValue>
                                                          </InArgument>
                                                        </ueab:ReadRangeX.Range>
                                                        <ueab:ReadRangeX.SaveTo>
                                                          <OutArgument x:TypeArguments="sd:DataTable">
                                                            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">dtTemp</CSharpReference>
                                                          </OutArgument>
                                                        </ueab:ReadRangeX.SaveTo>
                                                      </ueab:ReadRangeX>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ueab:ExcelApplicationCard.Body>
                                                <ueab:ExcelApplicationCard.WorkbookPath>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">CurrentFile.ToString()</CSharpValue>
                                                  </InArgument>
                                                </ueab:ExcelApplicationCard.WorkbookPath>
                                              </ueab:ExcelApplicationCard>
                                            </ActivityAction>
                                          </ueab:ExcelProcessScopeX.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:ExcelProcessScopeX>
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,200" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,88" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="MasterTemplate">
                                                <ui:ReadRange.DataTable>
                                                  <OutArgument x:TypeArguments="sd:DataTable">
                                                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">dtTemp</CSharpReference>
                                                  </OutArgument>
                                                </ui:ReadRange.DataTable>
                                                <ui:ReadRange.WorkbookPath>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">CurrentFile.ToString()</CSharpValue>
                                                  </InArgument>
                                                </ui:ReadRange.WorkbookPath>
                                              </ui:ReadRange>
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:CommentOut>
                                        <ui:MergeDataTable DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="387.2,134.4" sap2010:WorkflowViewState.IdRef="MergeDataTable_3" MissingSchemaAction="Add">
                                          <ui:MergeDataTable.Destination>
                                            <InOutArgument x:TypeArguments="sd:DataTable">
                                              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">dtDataUpload</CSharpReference>
                                            </InOutArgument>
                                          </ui:MergeDataTable.Destination>
                                          <ui:MergeDataTable.Source>
                                            <InArgument x:TypeArguments="sd:DataTable">
                                              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">dtTemp</CSharpValue>
                                            </InArgument>
                                          </ui:MergeDataTable.Source>
                                        </ui:MergeDataTable>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="452.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error">
                                            <ui:LogMessage.Message>
                                              <InArgument x:TypeArguments="x:Object">
                                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">" read master " + CurrentFile.ToString() + " " + exception.Message</CSharpValue>
                                              </InArgument>
                                            </ui:LogMessage.Message>
                                          </ui:LogMessage>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachFileX.Body>
                            <ui:ForEachFileX.Folder>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">CurrentFolder.ToString()</CSharpValue>
                              </InArgument>
                            </ui:ForEachFileX.Folder>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEachFileX>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachFolderX.Body>
              <ui:ForEachFolderX.Folder>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">in_Config["PathMasterAR"].ToString()</CSharpValue>
                </InArgument>
              </ui:ForEachFolderX.Folder>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachFolderX>
            <ueab:ExcelProcessScopeX FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayAlerts="False" DisplayName="Excel Process Scope" ExistingProcessAction="ForceKill" sap:VirtualizedContainerService.HintSize="755.2,880" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1" ShowExcelWindow="False">
              <ueab:ExcelProcessScopeX.Body>
                <ActivityAction x:TypeArguments="ui:IExcelProcess">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="601.6,793.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="539.2,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_5">
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">"path process " + in_Config["FileProcessInput"].ToString()</CSharpValue>
                      </InArgument>
                    </WriteLine>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel Data" sap:VirtualizedContainerService.HintSize="539.2,551.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="505.6,281.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="443.2,169.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_4" ReadFormatting="DisplayValue">
                              <ueab:ReadRangeX.Range>
                                <InArgument x:TypeArguments="ue:IReadRangeRef">
                                  <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">Excel.Sheet["Input-output"]</CSharpValue>
                                </InArgument>
                              </ueab:ReadRangeX.Range>
                              <ueab:ReadRangeX.SaveTo>
                                <OutArgument x:TypeArguments="sd:DataTable">
                                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">dtData</CSharpReference>
                                </OutArgument>
                              </ueab:ReadRangeX.SaveTo>
                            </ueab:ReadRangeX>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:ExcelApplicationCard.WorkbookPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">in_Config["FileProcessInput"].ToString()</CSharpValue>
                        </InArgument>
                      </ueab:ExcelApplicationCard.WorkbookPath>
                    </ueab:ExcelApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelProcessScopeX.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelProcessScopeX>
          </Sequence>
          <Sequence DisplayName="gen file upload &amp; upload" sap:VirtualizedContainerService.HintSize="890.4,1876" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="828,1764" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="794.4,1647.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="strFileName" />
                      <Variable x:TypeArguments="x:String" Name="strMessage">
                        <Variable.Default>
                          <Literal x:TypeArguments="x:String" Value="" />
                        </Variable.Default>
                      </Variable>
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="732,1535.2" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="632,1304" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap2010:Annotation.AnnotationText="CurrentRow[&quot;araccept&quot;].ToString().ToLower().Trim() == &quot;accept&quot; &#xA;&amp;&amp; CurrentRow[&quot;apaccept&quot;].ToString().ToLower().Trim() == &quot;accept&quot; &#xA;&amp;&amp; !CurrentRow[&quot;Reference&quot;].ToString().Trim().StartsWith(&quot;2000&quot;)&#xA;&amp;&amp; DateTime.ParseExact(CurrentRow[&quot;expireDate&quot;].ToString(),&quot;dd.MM.yyyy&quot;,System.Globalization.CultureInfo.InvariantCulture) &gt; DateTime.Now" sap:VirtualizedContainerService.HintSize="569.6,1192" sap2010:WorkflowViewState.IdRef="If_1">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67" xml:space="preserve">CurrentRow["araccept"].ToString().ToLower().Trim() == "accept" &amp;&amp; CurrentRow["apaccept"].ToString().ToLower().Trim() == "accept" 
&amp;&amp; !CurrentRow["Reference"].ToString().Trim().StartsWith("2000")
&amp;&amp; DateTime.ParseExact(CurrentRow["expireDate"].ToString().Trim(),"dd.MM.yyyy",System.Globalization.CultureInfo.InvariantCulture) &gt; DateTime.Now</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="upload" sap:VirtualizedContainerService.HintSize="536,916.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="gen file" sap:VirtualizedContainerService.HintSize="492.8,641.6" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="430.4,101.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">strFileName</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">in_Config["PathProcess"].ToString() + CurrentRow["Contract_no"].ToString() + "_" + DateTime.Now.ToString("yyyyMMdd")</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="430.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_1">
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">"start " + strFileName</CSharpValue>
                                    </InArgument>
                                  </WriteLine>
                                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="try{&#xA;&#x9;dtUpload.Clear();&#xA;&#x9;DataTable dtDistinct = dtPostingKey.AsEnumerable().Distinct(System.Data.DataRowComparer.Default).ToList().CopyToDataTable();&#xA;&#x9;&#xA;&#x9;//Console.WriteLine( &quot;count &quot; + dtPostingKey.Rows.Count.ToString() +&quot; table distinct  &quot; + ddd.Rows.Count.ToString() );&#xA;&#x9;var drPostingKey = dtDistinct.Select(&quot;Contract_no ='&quot;+ dr[&quot;Contract_no&quot;].ToString() +&quot;'&quot;);&#xA;&#x9;var listRef = dtRef.Select(&quot;Contract_no ='&quot;+ dr[&quot;Contract_no&quot;].ToString() +&quot;'&quot;);&#xA;&#x9;&#xA;&#x9;List&lt;DataRow&gt; drRef = listRef.ToList();&#xA;&#x9;&#xA;&#x9;if( drPostingKey.Count() &gt; 0 &amp;&amp; drRef.Count() &gt; 0 )&#xA;&#x9;{&#xA;&#x9;&#x9;int index = 0;&#xA;&#x9;&#x9;foreach (DataRow row in drPostingKey.ToList())&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;DataRow drUpload = dtUpload.NewRow();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;SPET&quot;]=&quot;1&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BLDAT&quot;]= new DateTime(DateTime.Now.Year,DateTime.Now.Month,1).ToString(&quot;dd.MM.yyyy&quot;);&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BLART&quot;]=&quot;DA&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BUKRS&quot;]=drRef[0][&quot;Company Code&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BUDAT&quot;]=new DateTime(DateTime.Now.Year,DateTime.Now.Month,1).ToString(&quot;dd.MM.yyyy&quot;);&#xA;&#x9;&#x9;&#x9;drUpload[&quot;MONAT&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;WAERS&quot;]=drRef[0][&quot;Currency Key&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;KURSF&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;XBLNR&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BKTXT&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BKPF-BRNCH&quot;]=drRef[0][&quot;Business  Place&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;NEWBS&quot;]=row[&quot;Posting_Key&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;NEWKO&quot;]=row[&quot;Account&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;WRBTR&quot;]=&quot;\&quot;&quot; + row[&quot;Amount_DC&quot;].ToString().Trim() +&quot;\&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ZTERM&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ZFBDT&quot;]=new DateTime(DateTime.Now.Year,DateTime.Now.Month,1).ToString(&quot;dd.MM.yyyy&quot;);&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ZLSPR&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ZLSCH&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;KIDNO&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ZUONR&quot;]= row[&quot;Assignment number&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;SGTXT&quot;]= row[&quot;Item Text&quot;].ToString().Contains(&quot;**&quot;) ? row[&quot;Item Text&quot;].ToString().Replace(&quot;**&quot; , DateTime.Now.ToString(&quot;MM/yyyy&quot;) )   : row[&quot;Item Text&quot;].ToString() + &quot; &quot; + DateTime.Now.ToString(&quot;MM/yyyy&quot;);&#xA;&#x9;&#x9;&#x9;drUpload[&quot;XREF1&quot;]=drRef[0][&quot;Reference_key1&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;XREF2&quot;]=drRef[0][&quot;Reference_key2&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;XREF3&quot;]= (index==0)? &quot;&quot; : drRef[0][&quot;Reference_key3&quot;].ToString() ;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;NEWUM&quot;]=(index==0)? drRef[0][&quot;SpecialGLCode&quot;].ToString() : &quot;&quot; ;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;VBUND&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;VALUT&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;KOSTL&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;AUFNR&quot;]=(index==0)? &quot;&quot; : row[&quot;Order_number&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;PRCTR&quot;]= row[&quot;Profit Center&quot;].ToString() ;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;DMBOTR&quot;]= &quot;\&quot;&quot; + row[&quot;Amount_DC&quot;].ToString().Trim() +&quot;\&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;FWBAS&quot;]=  &quot;\&quot;&quot;+row[&quot;Tax Base&quot;].ToString().Trim() +&quot;\&quot;&quot;;//(index == drPostingKey.Count()-1)? decimal.Parse( drPostingKey[0][&quot;Amount_DC&quot;].ToString() ) - decimal.Parse( drPostingKey[drPostingKey.Count()-1][&quot;Amount_DC&quot;].ToString()) : &quot;&quot; ;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;MWSKZ&quot;]=drRef[0][&quot;Tax on Sales/Purchases Code&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;XMWST&quot;]=(index == drPostingKey.Count()-1)? &quot;X&quot; : &quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;XSTBA&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ACCIT_WT-WITHT&quot;]=(index==0)? drRef[0][&quot;withholding_tax_type&quot;].ToString() : &quot;&quot; ;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ACCIT_WT-WT_WITHCD&quot;]=(index==0)? drRef[0][&quot;Withholding_tax_code&quot;].ToString() : &quot;&quot; ;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ACCIT_WT-WT_QSSHB&quot;]=(index==0)? &quot;\&quot;&quot;+drRef[0][&quot;Withholding_tax_base&quot;].ToString().Trim() + &quot;\&quot;&quot; : &quot;&quot; ;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ACCIT_WT-WT_QBUIHB&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ACCIT_WT-WITHT1&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ACCIT_WT-WT_WITHCD1&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ACCIT_WT-WT_QSSHB1&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;ACCIT_WT-WT_QBUIHB1&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;EMPFB&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;REGUL&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-NAME1&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-NAME2&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-NAME3&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-NAME4&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-STRAS&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-ORT01&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-PSTLZ&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-LAND1&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-SPRAS&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-STCD1&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-STCD2&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BSEC-J_1KFTBUS&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;WERKS&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;MATNR&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;MENGE&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;MEINS&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;GSBER&quot;]=row[&quot;businessArea&quot;].ToString();&#xA;&#x9;&#x9;&#x9;drUpload[&quot;SEGMENT&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;XREF1_HD&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;XREF2_HD&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;drUpload[&quot;BVTYP&quot;]=&quot;&quot;;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(dtUpload.Columns.Contains(&quot;LongText&quot;) &amp;&amp; row.Table.Columns.Contains(&quot;LongText&quot;) )&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;drUpload[&quot;LongText&quot;]=row[&quot;LongText&quot;].ToString();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;dtUpload.Rows.Add(drUpload);&#xA;&#x9;&#x9;&#x9;index++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else{&#xA;&#x9;&#x9;throw new Exception(&quot;can't find data Contract No &quot; + dr[&quot;Contract_no&quot;].ToString());&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;catch(Exception ex)&#xA;{&#xA;&#x9;Console.WriteLine(ex.Message);&#xA;&#x9;throw new Exception(&quot;Genarate file &quot; + dr[&quot;Contract_no&quot;].ToString() + &quot; error &quot; + ex.Message);&#xA;}" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="430.4,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                                    <ui:InvokeCode.Arguments>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="dtPostingKey">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">dtMasterPostingKey</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="dtRef">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">dtMasterRef</CSharpValue>
                                      </InArgument>
                                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dtUpload">
                                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">dtDataUpload</CSharpReference>
                                      </InOutArgument>
                                      <InArgument x:TypeArguments="sd:DataRow" x:Key="dr">
                                        <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">CurrentRow</CSharpValue>
                                      </InArgument>
                                    </ui:InvokeCode.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeCode>
                                  <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" Encoding="UTF-8" sap:VirtualizedContainerService.HintSize="430.4,52.8" sap2010:WorkflowViewState.IdRef="WriteTextFile_1">
                                    <ui:WriteTextFile.FileName>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">strFileName + ".txt"</CSharpValue>
                                      </InArgument>
                                    </ui:WriteTextFile.FileName>
                                    <ui:WriteTextFile.Text>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">string.Join(Environment.NewLine, dtDataUpload.Rows.OfType&lt;DataRow&gt;().Select(x =&gt; string.Join("\t" , x.ItemArray)));</CSharpValue>
                                      </InArgument>
                                    </ui:WriteTextFile.Text>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:WriteTextFile>
                                </Sequence>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke sqZFI05_UploadData workflow" sap:VirtualizedContainerService.HintSize="492.8,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Class\\sqZFI05_UploadData.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FilePathUpload">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">strFileName + ".txt"</CSharpValue>
                                    </InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Message">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">strMessage</CSharpReference>
                                    </OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="492.8,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,164.8" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="337.6,52.8" sap2010:WorkflowViewState.IdRef="DeleteFileX_1">
                                        <ui:DeleteFileX.Path>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">strFileName + ".txt"</CSharpValue>
                                          </InArgument>
                                        </ui:DeleteFileX.Path>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:DeleteFileX>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CommentOut>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="not accept" sap:VirtualizedContainerService.HintSize="400,83.2" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="634.4,806.4" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                                  <ui:IfElseIf.ConditionBlocks>
                                    <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                      <ui:IfElseIfBlock BlockType="If">
                                        <ui:IfElseIfBlock.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">CurrentRow["Reference"].ToString().Trim().StartsWith("2000")</CSharpValue>
                                          </InArgument>
                                        </ui:IfElseIfBlock.Condition>
                                        <ui:IfElseIfBlock.Then>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">strMessage</CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">CurrentRow["Reference"].ToString()</CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:IfElseIfBlock.Then>
                                      </ui:IfElseIfBlock>
                                      <ui:IfElseIfBlock BlockType="ElseIf">
                                        <ui:IfElseIfBlock.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">DateTime.ParseExact(CurrentRow["expireDate"].ToString(),"dd.MM.yyyy",System.Globalization.CultureInfo.InvariantCulture) &lt;= DateTime.Now</CSharpValue>
                                          </InArgument>
                                        </ui:IfElseIfBlock.Condition>
                                        <ui:IfElseIfBlock.Then>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">strMessage</CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">contact expired.</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:IfElseIfBlock.Then>
                                      </ui:IfElseIfBlock>
                                      <ui:IfElseIfBlock BlockType="Else">
                                        <ui:IfElseIfBlock.Then>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">strMessage</CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">not accept</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:IfElseIfBlock.Then>
                                      </ui:IfElseIfBlock>
                                    </sc:BindingList>
                                  </ui:IfElseIf.ConditionBlocks>
                                </ui:IfElseIf>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="698.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="400,620.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ucas:ReadStatusbar MessageData="{x:Null}" MessageId="{x:Null}" MessageNumber="{x:Null}" MessageType="{x:Null}" ContinueOnError="True" DisplayName="Read Status Bar 'Statusbar  sbar'" sap:VirtualizedContainerService.HintSize="337.6,268" sap2010:WorkflowViewState.IdRef="ReadStatusbar_1">
                                <ucas:ReadStatusbar.MessageText>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">strMessage</CSharpReference>
                                  </OutArgument>
                                </ucas:ReadStatusbar.MessageText>
                                <ucas:ReadStatusbar.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9aeb7eb9-64e2-4905-bf90-5975c67c286e" InformativeScreenshot="d4485ffe0910276b6f79d0f1b9027f86" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' title='*' /&gt;&lt;sap id='sbar' /&gt;" WaitForReady="COMPLETE">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                  </ui:Target>
                                </ucas:ReadStatusbar.Target>
                              </ucas:ReadStatusbar>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="337.6,62.4" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,192.8" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="337.6,69.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">strMessage</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">exception.InnerException == null ? exception.Message : exception.InnerException.Message</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="337.6,98.4" sap2010:WorkflowViewState.IdRef="WriteLine_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">"error " + strMessage</CSharpValue>
                                </InArgument>
                              </WriteLine>
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                      <TryCatch.Finally>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,92.8" sap2010:WorkflowViewState.IdRef="Sequence_23">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="430.4,98.4" sap2010:WorkflowViewState.IdRef="WriteLine_3">
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">"finally " + strMessage</CSharpValue>
                            </InArgument>
                          </WriteLine>
                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="430.4,111.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">
                                      <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">CurrentRow["Reference"]</CSharpReference>
                                    </OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">strMessage.Replace("\t","")</CSharpValue>
                                    </InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </Sequence>
                      </TryCatch.Finally>
                    </TryCatch>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">dtData</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Sequence>
          <Sequence DisplayName="update result" sap:VirtualizedContainerService.HintSize="890.4,83.2" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelProcessScopeX FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayAlerts="False" DisplayName="Excel Process Scope" ExistingProcessAction="ForceKill" sap:VirtualizedContainerService.HintSize="625.6,740" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3" ShowExcelWindow="False">
              <ueab:ExcelProcessScopeX.Body>
                <ActivityAction x:TypeArguments="ui:IExcelProcess">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,653.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="529.6,541.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,272" sap2010:WorkflowViewState.IdRef="Sequence_13">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:WriteRangeX DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="433.6,160" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False">
                              <ueab:WriteRangeX.Destination>
                                <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                  <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">Excel.Sheet["Input-output"]</CSharpValue>
                                </InArgument>
                              </ueab:WriteRangeX.Destination>
                              <ueab:WriteRangeX.Source>
                                <InArgument x:TypeArguments="sd:DataTable">
                                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">dtData</CSharpValue>
                                </InArgument>
                              </ueab:WriteRangeX.Source>
                            </ueab:WriteRangeX>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                      <ueab:ExcelApplicationCard.WorkbookPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">in_Config["FileProcessInput"].ToString()</CSharpValue>
                        </InArgument>
                      </ueab:ExcelApplicationCard.WorkbookPath>
                    </ueab:ExcelApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelProcessScopeX.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelProcessScopeX>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="956,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Throw sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_1">
              <InArgument x:TypeArguments="s:Exception">
                <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">new Exception("error sqARInvoiceGenarateFile " + exception.Message)</CSharpValue>
              </InArgument>
            </Throw>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>